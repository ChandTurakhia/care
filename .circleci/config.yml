version: 2.1

orbs:
  azure-acr: circleci/azure-acr@0.2.0
  azure-aks: circleci/azure-aks@0.2.1

executors:
  main-executor:
    machine:
      image: "ubuntu-1604:201903-01"
      docker_layer_caching: true

jobs:
  Test-Build:
    docker:
      - image: vichuhari100/care-base:latest
        environment:
          PGHOST: 127.0.0.1
          PGUSER: care
          DATABASE_URL: "postgis://care@localhost/care-test"
      - image: circleci/postgres:latest-postgis
        environment:
          POSTGRES_USER: care
          POSTGRES_DB: care-test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - restore_cache:
          key: v2-{{ .Branch }}-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/local.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/local.txt
      - save_cache:
          key: v2-{{ .Branch }}-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/local.txt" }}
          paths:
            - venv
      - run:
          name: Running tests
          no_output_timeout: 30m
          command: |
            . venv/bin/activate && python3 manage.py test

workflows:
  deploy-to-staging:
    jobs:
      - azure-acr/build-and-push-image:
          login-server-name: csregistry2.azurecr.io
          registry-name: csregistry2
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          tag: "${CIRCLE_SHA1},latest"
          # executor: main-executor
          filters:
            branches:
              only: master
      - azure-aks/update-container-image:
          name: deploy-to-staging
          cluster-name: "${EKS_CLUSTER_NAME}"
          container-image-updates: "${EKS_CONTAINER_NAME}=${AWS_ECR_ACCOUNT_URL}/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"
          resource-name: "${EKS_STAGING_DEPLOYMENT_NAME}"
          requires:
            - azure-acr/build-and-push-image
      - azure-aks/update-container-image:
          name: update-scheduler-staging
          cluster-name: "${EKS_CLUSTER_NAME}"
          container-image-updates: "${EKS_CONTAINER_NAME}=${AWS_ECR_ACCOUNT_URL}/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"
          resource-name: "${EKS_STAGING_SCHEDULER_NAME}"
          requires:
            - azure-acr/build-and-push-image
      - azure-aks/update-container-image:
          name: update-worker-staging
          cluster-name: "${EKS_CLUSTER_NAME}"
          container-image-updates: "${EKS_CONTAINER_NAME}=${AWS_ECR_ACCOUNT_URL}/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"
          resource-name: "${EKS_STAGING_WORKER_NAME}"
          requires:
            - azure-acr/build-and-push-image
